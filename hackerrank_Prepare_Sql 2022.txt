hackerrank_Prepare_Sql 2022년 start

-- The Blunder
SELECT CEIL(AVG(Salary)-AVG(REPLACE(Salary,'0',''))) 
FROM EMPLOYEES
;

-- Placements
SELECT
    Students.NAME
FROM Students 
    LEFT JOIN Friends ON Students.ID = Friends.ID
    LEFT JOIN Packages AS Packages1 ON Students.ID = Packages1.ID
    LEFT JOIN Packages AS Packages2 ON Friends.FRIEND_ID = Packages2.ID
WHERE 1=1
    AND Packages1.Salary < Packages2.Salary
ORDER BY Packages2.Salary ASC
;

-- The PADS 문자 추출
        FROM OCCUPATIONS
        GROUP BY OCCUPATION
    ) B
ORDER BY B.OCC_CNT ASC, B.OCCUPATION 
;

-- Average Population
SELECT ROUND(AVG(POPULATION))
SELECT
    CONCAT(A.NAME, "(", LEFT(A.OCCUPATION,1), ")") AS AA
FROM OCCUPATIONS A
ORDER BY A.NAME
;
SELECT
    CONCAT("There are a total of ", B.OCC_CNT, " ", LOWER(B.OCCUPATION), "s.") AS AA
FROM 
    (
        SELECT OCCUPATION, COUNT(NAME) AS OCC_CNT
FROM CITY
;

-- Revising Aggregations - Averages
SELECT  AVG(population)
FROM CITY
WHERE District  = 'California'
;

-- Higher Than 75 Marks/order
SELECT 
    NAME
FROM STUDENTS 
WHERE MARKS > 75
ORDER BY RIGHT(NAME,3), ID ASC
;

-- SELECT
SELECT A.*
FROM ANIMAL_INS A
ORDER BY ANIMAL_ID ASC
;

-- The Blunder summit
select CEILING( avg(salary*1.0) - avg(cast(replace(salary, '0', '') as float)) ) 
from EMPLOYEES
;

-- Japan Population
SELECT 
    SUM(POPULATION)
FROM CITY 
WHERE COUNTRYCODE = 'JPN'
;

-- Population Density Difference
SELECT MAX(POPULATION) - MIN(POPULATION)
FROM CITY
;

-- New Companies
SELECT
    COM.company_code, COM.founder 
    , COUNT(DISTINCT EE.lead_manager_code)
    , COUNT(DISTINCT EE.senior_manager_code)
    , COUNT(DISTINCT EE.manager_code)
    , COUNT(DISTINCT EE.employee_code)

FROM company COM
    left JOIN employee EE ON COM.company_code = EE.company_code 
WHERE EE.company_code IS NOT NULL
GROUP BY COM.company_code, COM.founder 
ORDER BY COM.company_code
;

-- The Blunder
SELECT CEIL(AVG(Salary)-AVG(REPLACE(Salary,'0',''))) 
FROM EMPLOYEES
;

-- Top Earners
SELECT
    MAX(MONTHS * SALARY)
    , COUNT(*)
FROM Employee 
WHERE 1=1
    AND MONTHS * SALARY = (SELECT MAX(MONTHS * SALARY) FROM Employee)
;

-- Weather Observation Station 2
SELECT
    ROUND(SUM(LAT_N ),2)
    , ROUND(SUM(LONG_W ) , 2)
FROM STATION 
;

-- Weather Observation Station 13
SELECT
    ROUND(SUM(LAT_N),4)
FROM STATION 
WHERE 1=1
    AND LAT_N BETWEEN 38.788 AND 137.2345
;


-- Weather Observation Station 14
SELECT ROUND(MAX(LAT_N),4)
FROM STATION
WHERE LAT_N < 137.2345
;

-- Weather Observation Station 15
SELECT
  ROUND(LONG_W, 4)
FROM STATION
WHERE 1=1
  AND LAT_N = 
  (
  SELECT
    MAX(LAT_N) AS LONG_WS
  FROM STATION
  WHERE 1=1
    AND LAT_N < 137.2345
)
;


-- Weather Observation Station 16
SELECT
    ROUND(MIN(LAT_N) ,4)
FROM STATION
WHERE 1=1
    AND LAT_N > 38.778
;

-- Weather Observation Station 17
SELECT
    ROUND(MAX(LONG_W),4)
FROM STATION
WHERE LAT_N = (
                SELECT
                    MIN(LAT_N)
                FROM STATION
                WHERE LAT_N > 38.778
              )
;

-- Population Census
SELECT
    SUM(CITY.population)
    
FROM CITY 
    LEFT JOIN COUNTRY ON CITY.CountryCode  = COUNTRY.Code

WHERE 1=1
    AND COUNTRY.CONTINENT =  'Asia'
;

-- African Cities
SELECT
    CITY.NAME
    
FROM CITY 
    LEFT JOIN COUNTRY ON CITY.CountryCode  = COUNTRY.Code

WHERE 1=1
    AND COUNTRY.CONTINENT =  'Africa'
;

-- Average Population of Each Continent
SELECT
    COUNTRY.Continent
    , FLOOR(AVG(CITY.Population))
    
FROM CITY 
    INNER JOIN COUNTRY ON CITY.CountryCode  = COUNTRY.Code

WHERE 1=1

GROUP BY 1
;

-- Draw The Triangle 1
WITH RECURSIVE rnum(n)
AS 
(
    SELECT 20
    UNION ALL
    SELECT n-1
    FROM rnum
    WHERE n > 1
)
SELECT REPEAT('* ', n)
FROM rnu
;

-- Revising the Select Query I
SELECT *
FROM CITY 
WHERE 1=1
    AND population  > 100000
    AND CountryCode = 'USA'
;

SELECT
    HOUR(DATETIME), COUNT(ANIMAL_ID)
FROM ANIMAL_OUTS 
WHERE 1=1
    AND HOUR(DATETIME) BETWEEN 9 AND 19
GROUP BY HOUR(DATETIME)
ORDER BY HOUR(DATETIME)
;

-- Draw The Triangle 2
WITH RECURSIVE cte AS
(
  SELECT 1 AS n, CAST('*' AS CHAR(100)) AS str
  UNION ALL
  SELECT n + 1, CONCAT(str, ' *') 
  FROM cte 
  WHERE n < 20
)
SELECT 
    str 
FROM ctç
;

-- VD RESTE_FAULT
SELECT
 CASE WHEN VD.TIMEOUT_YN IS TRUE AND C.DELIVERY_TYPE = 'VD' AND C.REST_TYPE = 'food' AND franchise_id not in (70,75) then true
 ELSE FALSE END REASON_YN
FROM MGMT
;

-- POINT
SELECT
	USER_ID
	, CASE WHEN POINT > (SELECT ROUND(AVG(POINT)) FROM USER) THEN 'GOOD' 
	  ELSE 'BAD' END MSG
FROM USER
;

-- Japanese Cities' Names
SELECT NAME
FROM CITY 
WHERE COUNTRYCODE = 'JPN'
;


-- Top N
SELECT
    NAME
FROM ANIMAL_INS 
ORDER BY DATETIME ASC
LIMIT 1
;

-- Revising Aggregations - The Sum Function
SELECT SUM(population )
FROM CITY
WHERE DISTRICT = 'California'
;

-- Select All
SELECT
    *
FROM CITY 
;

-- The PADS
SELECT
    CONCAT(A.NAME, "(", LEFT(A.OCCUPATION,1), ")") AS AA
FROM OCCUPATIONS A
ORDER BY A.NAME
;
SELECT
    CONCAT("There are a total of ", B.OCC_CNT, " ", LOWER(B.OCCUPATION), "s.") AS AA
FROM 
    (
        SELECT OCCUPATION, COUNT(NAME) AS OCC_CNT
        FROM OCCUPATIONS
        GROUP BY OCCUPATION
    ) B
ORDER BY B.OCC_CNT ASC, B.OCCUPATION 
;

-- Occupations
SELECT 
    MIN(CASE WHEN OCCUPATION = 'DOCTOR'      THEN NAME ELSE NULL END) 
    , MIN(CASE WHEN OCCUPATION = 'PROFESSOR'   THEN NAME ELSE NULL END) 
    , MIN(CASE WHEN OCCUPATION = 'SINGER'      THEN NAME ELSE NULL END) 
    , MIN(CASE WHEN OCCUPATION = 'ACTOR'       THEN NAME ELSE NULL END)
FROM
    (
        SELECT OCCUPATION, NAME, ROW_NUMBER() OVER (PARTITION BY OCCUPATION ORDER BY NAME) AS OCCUS
        FROM OCCUPATIONS
    ) AS T
GROUP BY OCCUS
;
