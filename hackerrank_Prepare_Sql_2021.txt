hackerrank_Prepare_Sql 2021

-- Japanese Cities' Names
SELECT NAME
FROM CITY 
WHERE COUNTRYCODE = 'JPN'
;

-- Weather Observation Station 1
SELECT CITY, STATE 
FROM STATION
;

-- Weather Observation Station 3
SELECT 
	DISTINCT CITY 
FROM STATION 
WHERE MOD(ID,2) = 0
;
 
-- Weather Observation Station 4
SELECT
    COUNT(CITY) - COUNT(DISTINCT CITY)
FROM STATION 
;

-- Weather Observation Station 5
SELECT A.CITY, A.CITY_L
FROM
    (
    SELECT CITY, LENGTH(CITY) AS CITY_L
    FROM STATION  
    ORDER BY LENGTH(CITY) ASC, CITY ASC
    LIMIT 1
    ) A

UNION ALL

SELECT B.CITY, B.CITY_L
FROM
    (
    SELECT CITY, LENGTH(CITY) AS CITY_L
    FROM STATION  
    ORDER BY LENGTH(CITY) DESC, CITY ASC
    LIMIT 1
    ) B
;

-- Weather Observation Station 6
SELECT 
    DISTINCT CITY
FROM STATION
WHERE 1=1
    AND LEFT(CITY,1) IN ('a', 'e', 'i', 'o', 'u')
;


-- Weather Observation Station 7
SELECT 
    DISTINCT CITY
FROM STATION
WHERE 1=1
    AND RIGHT(CITY,1) IN ('a', 'e', 'i', 'o', 'u')
;

-- Weather Observation Station 8
SELECT 
    DISTINCT CITY
FROM STATION
WHERE 1=1
    AND LEFT(CITY,1) IN ('a', 'e', 'i', 'o', 'u')
    AND RIGHT(CITY,1) IN ('a', 'e', 'i', 'o', 'u')
;

-- Weather Observation Station 9
SELECT 
    DISTINCT CITY
FROM STATION
WHERE 1=1
    AND LEFT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u')
;

-- Weather Observation Station 10
SELECT 
    DISTINCT CITY
FROM STATION
WHERE 1=1
    AND RIGHT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u')
;

-- Weather Observation Station 11
SELECT 
    DISTINCT CITY
FROM STATION
WHERE 1=1
    AND ( LEFT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u')
         OR RIGHT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u') )
;

-- Weather Observation Station 12
SELECT 
    DISTINCT CITY
FROM STATION
WHERE 1=1
    AND LEFT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u')
    AND RIGHT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u')
;

-- Higher Than 75 Marks
SELECT 
    NAME
FROM STUDENTS 
WHERE MARKS > 75
ORDER BY RIGHT(NAME,3), ID ASC
;


-- Employee Names
SELECT 
    NAME
FROM Employee 
ORDER BY NAME
;


-- Aggregation
SELECT COUNT(ID)
FROM CITY
WHERE Population > 100000
;


-- Type of Triangle
SELECT CASE             
            WHEN A + B > C AND B + C > A AND A + C > B THEN
                CASE 
                    WHEN A = B AND B = C THEN 'Equilateral'
                    WHEN A = B OR B = C OR A = C THEN 'Isosceles'
                    ELSE 'Scalene'
                END
            ELSE 'Not A Triangle'
        END
FROM TRIANGLES
;


-- Revising Aggregations - The Sum Function
SELECT SUM(population )
FROM CITY
WHERE DISTRICT = 'California'
;


-- The PADS
SELECT
    CONCAT(OC1.NAME,'(',SUBSTR(OC1.OCCUPATION,1,1),')') AS A
FROM OCCUPATIONS OC1
ORDER BY OC1.NAME, OC1.OCCUPATION
;
SELECT 
    CONCAT('There are a total of ' ,B.NAME_C ,' ' , lower(B.OCCUPATION), 's.' ) AS A
FROM
    (
    SELECT
        OCCUPATION, COUNT(NAME) AS NAME_C
    FROM OCCUPATIONS
    GROUP BY OCCUPATION
    ) B
ORDER BY B.NAME_C, B.OCCUPATION
;

